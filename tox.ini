[tox]
minversion = 2.0
envlist = py39,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
deps =
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
    find mado -type f -name "*.pyc" -delete
    stestr run {posargs}
whitelist_externals =
    find
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:linters]
deps = {[testenv:pep8]deps}
usedevelop = False
commands = flake8 {posargs} mado
           flake8 {posargs} tests

[testenv:pep8]
deps = {[testenv]deps}
       .
usedevelop = False
commands = flake8 {posargs} mado
           flake8 {posargs} tests
           {[testenv:pylint]commands}

[testenv:venv]
commands = {posargs}

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands=
    python setup.py build_sphinx

[flake8]
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,releasenotes
enable-extensions = H106,H203

[testenv:pylint]
commands = pylint --rcfile=pylintrc mado

# This environment can be used to quickly validate that all needed system
# packages required to successfully execute test targets are installed
[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
deps = bindep
commands = bindep test
